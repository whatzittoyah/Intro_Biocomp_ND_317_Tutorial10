# Problem 2

# ODE Function

SIRmodel = function(t,y,p){
  S = y[1]
  I = y[2]
  R = y[3]
  
  beta = p[1]
  gamma = p[2]
  
  dSdt = -beta*I*S
  dIdt = beta*I*S - gamma*I
  dRdt = gamma*I
  
  return(list(c(dSdt, dIddt, dRdt)))
}

#designing the functions to calculate the desired values

#Maximum Daily Incidence

MDI <- function(I){
  MDI <- I[2] - I[1] #comparing the 
  for (i in 3:500){
    if(I[i] - I[i-1] > MDI){
      MDI = I[i] - I[i-1]
    }
  }
  return(MDI)
}

#Maximum Daily Prevalence

MDP <- function(S,I,R){
  MDP <- I[1]/(S[1]+I[1]+R[1])
  for (i in 2:500){
    if(I[1]/(S[i]+I[i]+R[i]) > MDP){
      MDP <- S[i]+I[i]+R[i] 
    }
  }
  return(MDP)
}

#Percent Affected

PA <- function(S,I,R){
  PA <- (I[500] + R[500])/(S[500] + I[500] + R[500])
  return(PA)
}

#Base Reproductive Number

BRN <- function(p,S,I,R){
  BRN <- (p[1]*(S[1] + I[1] + R[1]))/p[2]
  return(BRN)
}

#Constant initial conditions and timespan

NO = c(999,1,0)
times = 1:500

#Solving for ODE

#Case 1 (top to bottom of the table of the exercise worksheet)

params1 = c(.0005,.05)
Case1 = ode(y=NO, times = times, func = SIRmodel, parms = params1)
modelOutput1 = data.frame(time=Case1[,1], S=Case1[,2], I=Case1[,3], R=Case1[,4])
attach(modelOutput1)
mdi <- MDI(I)
mdp <- MDP(S,I,R)
pa <- PA(S,I,R)
brn <- BRN(params1, S,I,R)

VALUES <- matrix(c(params1[1],params1[2],mdi,mdp,pa,brn), ncol=6)
colnames(VALUES) <- c("Beta","Gamma","Maximum Daily Incidence","Maximum Daily Prevalence","Percent Affected","Base Reproductive Number")
rownames(VALUES) <- c("Case 1")
VALUES <- as.table(VALUES)

#Case 2
params2 = c(.005,.5)
Case2 = ode(y=NO, times = times, func = SIRmodel, parms = params2)
modelOutput2 = data.frame(time=Case2[,1], S=Case2[,2], I=Case2[,3], R=Case2[,4])
attach(modelOutput2)
mdi <- MDI(I)
mdp <- MDP(S,I,R)
pa <- PA(S,I,R)
brn <- BRN(params2, S,I,R)

VALUES <- rbind(VALUES, "Case 2" = c(params2[1],params2[2],mdi,mdp,pa,brn))

#Case 3
params3 = c(.0001,.1)
Case3 = ode(y=NO, times = times, func = SIRmodel, parms = params3)
modelOutput3 = data.frame(time=Case3[,1], S=Case3[,2], I=Case3[,3], R=Case3[,4])
attach(modelOutput3)
mdi <- MDI(I)
mdp <- MDP(S,I,R)
pa <- PA(S,I,R)
brn <- BRN(params2, S,I,R)

VALUES <- rbind(VALUES, "Case 3" = c(params3[1],params3[2],mdi,mdp,pa,brn))

#Case 4
params4 = c(.00005,.1)
Case4 = ode(y=NO, times = times, func = SIRmodel, parms = params4)
modelOutput4 = data.frame(time=Case4[,1], S=Case4[,2], I=Case4[,3], R=Case4[,4])
attach(modelOutput4)
mdi <- MDI(I)
mdp <- MDP(S,I,R)
pa <- PA(S,I,R)
brn <- BRN(params4, S,I,R)

VALUES <- rbind(VALUES, "Case 4" = c(params4[1],params4[2],mdi,mdp,pa,brn))

#Case 5
params5 = c(.0001,.05)
Case5 = ode(y=NO, times = times, func = SIRmodel, parms = params5)
modelOutput5 = data.frame(time=Case5[,1], S=Case5[,2], I=Case5[,3], R=Case5[,4])
attach(modelOutput5)
mdi <- MDI(I)
mdp <- MDP(S,I,R)
pa <- PA(S,I,R)
brn <- BRN(params5, S,I,R)

VALUES <- rbind(VALUES, "Case 5" = c(params5[1],params5[2],mdi,mdp,pa,brn))

#Case 6
params6 = c(.0002,.05)
Case6 = ode(y=NO, times = times, func = SIRmodel, parms = params6)
modelOutput6 = data.frame(time=Case6[,1], S=Case6[,2], I=Case6[,3], R=Case6[,4])
attach(modelOutput6)
mdi <- MDI(I)
mdp <- MDP(S,I,R)
pa <- PA(S,I,R)
brn <- BRN(params6, S,I,R)

VALUES <- rbind(VALUES, "Case 6" = c(params6[1],params6[2],mdi,mdp,pa,brn))

#Case 7
params7 = c(.005,.5)
Case7 = ode(y=NO, times = times, func = SIRmodel, parms = params7)
modelOutput7 = data.frame(time=Case7[,1], S=Case7[,2], I=Case7[,3], R=Case7[,4])
attach(modelOutput2)
mdi <- MDI(I)
mdp <- MDP(S,I,R)
pa <- PA(S,I,R)
brn <- BRN(params7, S,I,R)

VALUES <- rbind(VALUES, "Case 7" = c(params7[1],params7[2],mdi,mdp,pa,brn))
                
                
                
